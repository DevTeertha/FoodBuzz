{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeGoogleSignin = require(\"react-native-google-signin\");\n\nvar _jsxFileName = \"D:\\\\React-Js\\\\SCIC\\\\Mission-5\\\\react-native\\\\team-project\\\\FoodBuzz\\\\components\\\\Login\\\\Login.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Login() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loggedIn = _useState2[0],\n      setloggedIn = _useState2[1];\n\n  var _useContext = useContext(stateContext),\n      _useContext2 = (0, _slicedToArray2.default)(_useContext, 4),\n      cart = _useContext2[0],\n      setCart = _useContext2[1],\n      userInfo = _useContext2[2],\n      setuserInfo = _useContext2[3];\n\n  var handleGoogleLogin = function handleGoogleLogin() {\n    var _await$GoogleSignin$s, accessToken, idToken, details;\n\n    return _regenerator.default.async(function handleGoogleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNativeGoogleSignin.GoogleSignin.hasPlayServices());\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(_reactNativeGoogleSignin.GoogleSignin.signIn());\n\n          case 5:\n            _await$GoogleSignin$s = _context.sent;\n            accessToken = _await$GoogleSignin$s.accessToken;\n            idToken = _await$GoogleSignin$s.idToken;\n            setloggedIn(true);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.code === _reactNativeGoogleSignin.statusCodes.SIGN_IN_CANCELLED) {\n              alert('Cancel');\n            } else if (_context.t0.code === _reactNativeGoogleSignin.statusCodes.IN_PROGRESS) {\n              details = (0, _extends2.default)({}, userInfo);\n              setuserInfo(details);\n            } else if (_context.t0.code === _reactNativeGoogleSignin.statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n              alert('PLAY_SERVICES_NOT_AVAILABLE');\n            } else {\n              alert('Login failed');\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  useEffect(function () {\n    _reactNativeGoogleSignin.GoogleSignin.configure({\n      scopes: ['email'],\n      webClientId: '92412027694-3v8i15sjsirr1ilge7l74ircpcadq096.apps.googleusercontent.com',\n      offlineAccess: true\n    });\n  }, []);\n\n  var signOut = function signOut() {\n    return _regenerator.default.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_reactNativeGoogleSignin.GoogleSignin.revokeAccess());\n\n          case 3:\n            _context2.next = 5;\n            return _regenerator.default.awrap(_reactNativeGoogleSignin.GoogleSignin.signOut());\n\n          case 5:\n            setloggedIn(false);\n            setuserInfo([]);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(ScrollView, {\n    contentInsetAdjustmentBehavior: \"automatic\",\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(View, {\n    style: styles.sectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeGoogleSignin.GoogleSigninButton, {\n    style: {\n      width: 192,\n      height: 48\n    },\n    size: _reactNativeGoogleSignin.GoogleSigninButton.Size.Wide,\n    color: _reactNativeGoogleSignin.GoogleSigninButton.Color.Dark,\n    onPress: this._signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  })), _react.default.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, !loggedIn && _react.default.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"You are currently logged out\"), loggedIn && _react.default.createElement(Button, {\n    onPress: this.signOut,\n    title: \"LogOut\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/React-Js/SCIC/Mission-5/react-native/team-project/FoodBuzz/components/Login/Login.js"],"names":["Login","loggedIn","setloggedIn","useContext","stateContext","cart","setCart","userInfo","setuserInfo","handleGoogleLogin","GoogleSignin","hasPlayServices","signIn","accessToken","idToken","code","statusCodes","SIGN_IN_CANCELLED","alert","IN_PROGRESS","details","PLAY_SERVICES_NOT_AVAILABLE","useEffect","configure","scopes","webClientId","offlineAccess","signOut","revokeAccess","console","error","styles","scrollView","body","sectionContainer","width","height","GoogleSigninButton","Size","Wide","Color","Dark","_signIn","buttonContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    GoogleSignin,\r\n    GoogleSigninButton,\r\n    statusCodes,\r\n} from 'react-native-google-signin';\r\n\r\nexport default function Login() {\r\n\r\n    const [loggedIn, setloggedIn] = useState(false);\r\n    const [cart, setCart, userInfo, setuserInfo] = useContext(stateContext);\r\n\r\n    const handleGoogleLogin = async () => {\r\n        try {\r\n            await GoogleSignin.hasPlayServices();\r\n            const { accessToken, idToken } = await GoogleSignin.signIn();\r\n            setloggedIn(true);\r\n        } catch (error) {\r\n            if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n                alert('Cancel');\r\n            } else if (error.code === statusCodes.IN_PROGRESS) {\r\n                const details = { ...userInfo }\r\n                setuserInfo(details)\r\n            } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n                alert('PLAY_SERVICES_NOT_AVAILABLE');\r\n            } else {\r\n                alert('Login failed')\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        GoogleSignin.configure({\r\n            scopes: ['email'],\r\n            webClientId:\r\n                '92412027694-3v8i15sjsirr1ilge7l74ircpcadq096.apps.googleusercontent.com',\r\n            offlineAccess: true,\r\n        });\r\n    }, []);\r\n\r\n    const signOut = async () => {\r\n        try {\r\n            await GoogleSignin.revokeAccess();\r\n            await GoogleSignin.signOut();\r\n            setloggedIn(false);\r\n            setuserInfo([]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <StatusBar barStyle=\"dark-content\" />\r\n          <SafeAreaView>\r\n            <ScrollView\r\n              contentInsetAdjustmentBehavior=\"automatic\"\r\n              style={styles.scrollView}>\r\n              <Header />\r\n    \r\n              <View style={styles.body}>\r\n                <View style={styles.sectionContainer}>\r\n                  <GoogleSigninButton\r\n                    style={{width: 192, height: 48}}\r\n                    size={GoogleSigninButton.Size.Wide}\r\n                    color={GoogleSigninButton.Color.Dark}\r\n                    onPress={this._signIn}\r\n                  />\r\n                </View>\r\n                <View style={styles.buttonContainer}>\r\n                  {!loggedIn && <Text>You are currently logged out</Text>}\r\n                  {loggedIn && (\r\n                    <Button\r\n                      onPress={this.signOut}\r\n                      title=\"LogOut\"\r\n                      color=\"red\"></Button>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            </ScrollView>\r\n          </SafeAreaView>\r\n        </>\r\n      );\r\n}"]},"metadata":{},"sourceType":"script"}
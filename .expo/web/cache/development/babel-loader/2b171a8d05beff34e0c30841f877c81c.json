{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _database = require(\"../../src/FakeData/database\");\n\nvar _CartListCard = _interopRequireDefault(require(\"./CartListCard\"));\n\nvar _App = require(\"../../App\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\React-Js\\\\SCIC\\\\Mission-5\\\\react-native\\\\team-project\\\\FoodBuzz\\\\components\\\\Cart\\\\Cart.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Cart = function Cart() {\n  var _useContext = (0, _react.useContext)(_App.stateContext),\n      _useContext2 = (0, _slicedToArray2.default)(_useContext, 2),\n      cart = _useContext2[0],\n      setCart = _useContext2[1];\n\n  (0, _react.useEffect)(function () {\n    setCart(_database.cartList);\n  }, [cart]);\n\n  var pressHandler = function pressHandler() {\n    alert(\"Pressed\");\n  };\n\n  var quantityIncrease = function quantityIncrease(id) {\n    var item = cart.find(function (ct) {\n      return ct.id === id;\n    });\n\n    if (item.quantity >= 0) {\n      item.quantity = item.quantity + 1;\n    } else {\n      item.quantity = 0;\n    }\n\n    var newCart = cart.filter(function (ct) {\n      return ct.id !== id;\n    });\n    newCart = [].concat((0, _toConsumableArray2.default)(newCart), [item]);\n\n    var compare = function compare(a, b) {\n      var idA = a.id.toUpperCase();\n      var idB = b.id.toUpperCase();\n      var comparison = 0;\n\n      if (idA > idB) {\n        comparison = 1;\n      } else if (idA < idB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    setCart(newCart.sort(compare));\n  };\n\n  var quantityDecrease = function quantityDecrease(id) {\n    var item = cart.find(function (ct) {\n      return ct.id === id;\n    });\n\n    if (item.quantity > 0) {\n      item.quantity = item.quantity - 1;\n    } else {\n      item.quantity = 0;\n    }\n\n    var newCart = cart.filter(function (ct) {\n      return ct.id !== id;\n    });\n    newCart = [].concat((0, _toConsumableArray2.default)(newCart), [item]);\n\n    var compare = function compare(a, b) {\n      var idA = a.id.toUpperCase();\n      var idB = b.id.toUpperCase();\n      var comparison = 0;\n\n      if (idA > idB) {\n        comparison = 1;\n      } else if (idA < idB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    setCart(newCart.sort(compare));\n  };\n\n  var totalCalculation = function totalCalculation() {\n    var total = 0;\n    cart.map(function (ct) {\n      var price = ct.price,\n          quantity = ct.quantity;\n      total = total + price * quantity;\n    });\n    return total;\n  };\n\n  return _react.default.createElement(_reactNative.ScrollView, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    style: {\n      marginTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'gray',\n      fontSize: 18,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \" \", \"< Back\", \" \")), _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 25,\n      fontWeight: 'bold',\n      marginTop: 10,\n      color: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Cart List\")), _react.default.createElement(_reactNative.View, {\n    style: style.cartContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, cart ? _react.default.createElement(_react.default.Fragment, null, cart.map(function (cart, index) {\n    return _react.default.createElement(_CartListCard.default, {\n      quantityDecrease: quantityDecrease,\n      quantityIncrease: quantityIncrease,\n      cart: cart,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 59\n      }\n    });\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      flex: 5,\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"Total: \"), _react.default.createElement(_reactNative.Text, {\n    style: {\n      flex: 2,\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \" $\", totalCalculation().toFixed(2), \" \"))) : _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Empty\")), _react.default.createElement(_reactNative.Pressable, {\n    onPress: pressHandler,\n    style: style.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: style.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Checkout\")));\n};\n\nvar style = _reactNative.StyleSheet.create({\n  container: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  cartContainer: {\n    marginTop: 20,\n    marginBottom: 30,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n    paddingHorizontal: 32,\n    borderRadius: 30,\n    elevation: 3,\n    fontSize: 50,\n    backgroundColor: '#17A2B8'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});\n\nvar _default = Cart;\nexports.default = _default;","map":{"version":3,"sources":["D:/React-Js/SCIC/Mission-5/react-native/team-project/FoodBuzz/components/Cart/Cart.js"],"names":["Cart","stateContext","cart","setCart","cartList","pressHandler","alert","quantityIncrease","id","item","find","ct","quantity","newCart","filter","compare","a","b","idA","toUpperCase","idB","comparison","sort","quantityDecrease","totalCalculation","total","map","price","style","container","marginTop","color","fontSize","fontWeight","textAlign","cartContainer","index","flexDirection","flex","toFixed","button","text","StyleSheet","create","marginRight","marginLeft","marginBottom","paddingTop","paddingBottom","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","lineHeight","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport {\r\n    SafeAreaView,\r\n    ScrollView,\r\n    StatusBar,\r\n    StyleSheet,\r\n    Button,\r\n    Text,\r\n    View,\r\n    Pressable\r\n} from 'react-native';\r\nimport { cartList } from '../../src/FakeData/database';\r\nimport CartListCard from './CartListCard';\r\nimport { stateContext } from '../../App';\r\n\r\nconst Cart = () => {\r\n    const [cart, setCart] = useContext(stateContext);\r\n    useEffect(() => {\r\n        setCart(cartList)\r\n    }, [cart])\r\n\r\n    const pressHandler = () => {\r\n        alert(\"Pressed\")\r\n    }\r\n\r\n    const quantityIncrease = (id) => {\r\n        const item = cart.find(ct => ct.id === id)\r\n        if (item.quantity >= 0) {\r\n            item.quantity = item.quantity + 1;\r\n        }\r\n        else {\r\n            item.quantity = 0;\r\n        }\r\n        let newCart = cart.filter(ct => ct.id !== id)\r\n        newCart = [...newCart, item]\r\n\r\n        const compare = (a, b) => {\r\n            const idA = a.id.toUpperCase();\r\n            const idB = b.id.toUpperCase();\r\n\r\n            let comparison = 0;\r\n            if (idA > idB) {\r\n                comparison = 1;\r\n            } else if (idA < idB) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        setCart(newCart.sort(compare));\r\n    }\r\n    const quantityDecrease = (id) => {\r\n        const item = cart.find(ct => ct.id === id)\r\n        if (item.quantity > 0) {\r\n            item.quantity = item.quantity - 1;\r\n        }\r\n        else {\r\n            item.quantity = 0;\r\n        }\r\n        let newCart = cart.filter(ct => ct.id !== id)\r\n        newCart = [...newCart, item]\r\n\r\n        const compare = (a, b) => {\r\n            const idA = a.id.toUpperCase();\r\n            const idB = b.id.toUpperCase();\r\n\r\n            let comparison = 0;\r\n            if (idA > idB) {\r\n                comparison = 1;\r\n            } else if (idA < idB) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        setCart(newCart.sort(compare));\r\n    }\r\n\r\n    const totalCalculation = () => {\r\n        let total = 0;\r\n        cart.map((ct) => {\r\n            const { price, quantity } = ct;\r\n            total = total + (price * quantity);\r\n        })\r\n        return total;\r\n    }\r\n    return (\r\n        <ScrollView style={style.container}>\r\n            <Pressable style={{ marginTop: 15 }}>\r\n                <Text style={{ color: 'gray', fontSize: 18, fontWeight: 'bold' }}> {\"< Back\"} </Text>\r\n            </Pressable>\r\n            <View>\r\n                <Text style={{ textAlign: \"center\",fontSize:25, fontWeight:'bold', marginTop:10, color:'gray' }}>Cart List</Text>\r\n            </View>\r\n            <View style={style.cartContainer}>\r\n                {\r\n                    cart ?\r\n                        <>\r\n                            {\r\n                                cart.map((cart, index) => <CartListCard quantityDecrease={quantityDecrease} quantityIncrease={quantityIncrease} cart={cart} key={index}></CartListCard>)\r\n                            }\r\n                            <View style={{ flexDirection: 'row' }}>\r\n                                <Text style={{ flex: 5, fontSize: 20, fontWeight: 'bold', color: 'gray' }}>Total: </Text>\r\n                                <Text style={{ flex: 2, fontSize: 20, fontWeight: 'bold', color: 'gray' }}> ${totalCalculation().toFixed(2)} </Text>\r\n                            </View>\r\n                        </>\r\n                        :\r\n                        <Text>Empty</Text>\r\n                }\r\n            </View>\r\n            <Pressable onPress={pressHandler} style={style.button}>\r\n                <Text style={style.text}>Checkout</Text>\r\n            </Pressable>\r\n\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        marginRight: 20,\r\n        marginLeft: 20\r\n    },\r\n    cartContainer: {\r\n        marginTop: 20,\r\n        marginBottom: 30,\r\n        paddingTop: 10,\r\n        paddingBottom: 10\r\n\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 20,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 30,\r\n        elevation: 3,\r\n        fontSize: 50,\r\n        backgroundColor: '#17A2B8',\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    }\r\n})\r\n\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"script"}